{ F1.INC - tImage program-generated include file }
{ Please register this shareware.  Send $25 to: }
{   J. H. Sarver, 20235 Warrington, Katy TX  77450 }

const
  F1ImageData : array[1..806] of byte = (
   39,  0, 39,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  8,  0,  0,
    0,  0,  8,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  8,
    0,  0,  0,  3,232,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  8,  0,  0,  0,  3,248,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  8,  0,  0,  0,  3,248,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  3,255,203,255,192,  0,  0, 56,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0, 15,192,  7,255,239,255,224,  0,  0, 24,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  1,224, 15,255,255,255,240,  0,  0,  8,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,112, 31,255,255,255,248,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 56, 63,255,255,255,252,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 24, 63,255,255,255,252,
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  8, 63,255,255,
  255,252,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4,  0, 16,  8, 63,
  199,255, 31,252,  0,  4,  0, 16,  0,  0, 36,  0,144,  0,  0,  8,  0, 32,
    0, 63,203,255, 47,252,  0,  8,  0, 32,  0,  0, 40,  0,160,  0,  0,  0,
    0,  0,  0, 63,195,255, 15,252,  0,  0,  0,  0,  0,  0, 32,  0,128,  0,
    0,  0,  0,  0,  0, 63,195,255, 15,252,  0,  0,  0,  0,  0,  0, 32,  0,
  128,  0,  0,  0,  0,  0,  0, 63,195,255, 15,252,  0,  0,  0,  0,  0,  0,
   32,  0,128,  0,  0,  0,  0,  0,  0, 63,195,255, 15,252,  0,  0,  0,  0,
    0,  0, 60,  0,240,  0,  0,  0,  0,  0,  0, 63,255,255,255,252,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 63,255,255,255,252,
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 63,255,255,
  255,252,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 63,
  255,255,255,252,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0, 63,240,  0, 15,252,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
   31,128,  0, 63,240, 31,143,252,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0, 63,  0,  0, 63,248, 63, 31,252,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0, 60,  0,  0, 31,252, 60, 63,248,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,  0, 15,254,  0,127,240,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  7,255,255,255,224,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  3,255,255,255,192,
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,255,255,
  255,128,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  255,255,255,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,127,255,254,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0, 63,255,252,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0, 31,247,248,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  8);

var
  F1 : pointer;

function DiskGetF1Image : boolean;
var
  IFile : file;
  FSize : word;
  R     : word;
begin
  DiskGetF1Image := false;
  assign(IFile,'F1.img                                                             ');
  {I-} reset(IFile,1); {$I+}
  if IOResult <> 0 then exit;
  FSize := FileSize(IFile);
  if MemAvail > FSize then begin
    reset(IFile,FSize);
    GetMem(F1,FSize);
    BlockRead(IFile,F1^,1,R);
    DiskGetF1Image := true;
  end;
  close(IFile);
end;

procedure MemGetF1Image;
begin
F1 := addr(F1ImageData)
end;
